name: Complex caching
description: some more complex caching - pip & conda

inputs:
  python-version:
    description: Python version
    required: true
  requires:
    description: define oldest, latest, or an empty string
    required: false
    default: ""
  offset:
    description: some extra hash for pip cache
    required: false
    default: ""
  interval:
    description: cache hash reset interval in days
    required: false
    default: "7"

runs:
  using: "composite"
  steps:

  - name: install assitant's deps
    run: |
      pip install fire requests packaging
    shell: bash

  - name: Set min. dependencies
    if: inputs.requires == 'oldest'
    run: python .github/assistant.py set-oldest-versions
    shell: bash

  - name: Determine caches
    env:
      PWD: $(pwd)
    run: |
      python -c "from pip._internal.locations import USER_CACHE_DIR; print('PIP_CACHE_DIR=' + USER_CACHE_DIR)" >> $GITHUB_ENV
    shell: bash

  - name: Cache pip
    uses: actions/cache@v3
    with:
      path: $PIP_CACHE_DIR
      key: ${{ runner.os }}-py${{ inputs.python-version }}-pip-${{ inputs.offset }}-${{ hashFiles('requirements.txt') }}
      restore-keys: ${{ runner.os }}-py${{ inputs.python-version }}-pip-${{ inputs.offset }}-

  - name: Cache conda
    uses: actions/cache@v3
    if: runner.os == 'Linux'
    with:
      path: ~/conda_pkgs_dir
      key: py${{ inputs.python-version }}-conda-${{ inputs.offset }}
      restore-keys: py${{ inputs.python-version }}-conda-${{ inputs.offset }}
