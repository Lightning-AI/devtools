name: Building docs

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        default: "3.9"
        required: false
        type: string
      docs-dir:
        description: "Working directory to run make docs in"
        default: "./docs"
        required: false
        type: string
      timeout-minutes:
        description: "timeout-minutes for each job"
        default: 15
        required: false
        type: number
      requirements-file:
        description: "path to the requirement file"
        default: "requirements/docs.txt"
        required: false
        type: string
      env-vars:
        description: "custom environment variables in json format"
        required: false
        type: string
        default: |
          {
            "SPHINX_MOCK_REQUIREMENTS": 0,
          }
      make-target:
        description: "what test configs to run in json format"
        required: false
        type: string
        default: |
          ["html", "doctest", "linkcheck"]
      install-tex:
        description: "optional installing Texlive support"
        required: false
        type: boolean
        default: false

defaults:
  run:
    shell: bash

env:
  TORCH_URL: "https://download.pytorch.org/whl/torch_stable.html"

jobs:
  make-docs:
    runs-on: ubuntu-20.04
    env: ${{ fromJSON(inputs.env-vars) }}
    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(inputs.make-target) }}
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python 🐍 ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install pandoc & texlive
        if: inputs.install-tex == 'true'
        timeout-minutes: 20
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install -y pandoc texlive-latex-extra dvipng texlive-pictures
      # todo: consider adding cache with separate restore/dave
      - name: Install dependencies
        timeout-minutes: 20
        run: |
          pip --version
          pip install -e . -U -r ${{ inputs.requirements-file }} -f ${TORCH_URL}
          pip list

      # TODO: re-enable after the external usage is resolved, see #51
      # - uses: ./.github/actions/pip-list

      - name: Test Documentation
        if: ${{ matrix.check == 'doctest' }}
        working-directory: ${{ inputs.docs-dir }}
        run: |
          make doctest
          make coverage

      - name: Check External Links
        if: ${{ matrix.check == 'linkcheck' }}
        working-directory: ${{ inputs.docs-dir }}
        run: make  linkcheck SPHINXOPTS="--keep-going"

      - name: Build documentation
        if: ${{ matrix.check != 'linkcheck' }} && ${{ matrix.check != 'doctest' }}
        working-directory: ${{ inputs.docs-dir }}
        run: make html --debug SPHINXOPTS="-W --keep-going"

      - name: Keep artifact
        id: keep-artifact
        run: python -c "print('DAYS=' + str(7 if '${{ github.event_name }}'.startswith('pull_request') else 0))" >> $GITHUB_OUTPUT
      - name: Upload built docs
        if: ${{ matrix.check != 'linkcheck' }} && ${{ matrix.check != 'doctest' }}
        uses: actions/upload-artifact@v3
        with:
          name: docs-${{ github.sha }}
          path: ${{ inputs.docs-dir }}/build/html/
          retention-days: ${{ steps.keep-artifact.outputs.DAYS }}
