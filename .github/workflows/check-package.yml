name: Check package flow

on:
  workflow_call:
    inputs:
      actions-ref:
        description: 'Version of actions, normally the same as workflow'
        required: true
        type: string
      artifact-name:
        description: 'Unique name for collecting artifacts'
        required: true
        type: string
      import-name:
        description: 'Import name to test with after installation'
        required: true
        type: string
      install-flags:
        description: 'Additional pip install flags'
        required: false
        type: string
        default: ""
      build-matrix:
        description: 'what building configs in json format'
        required: false
        type: string
        default: |
          {
            "os": ["ubuntu-latest"],
          }
      testing-matrix:
        description: 'what test configs to run in json format'
        required: false
        type: string
        # default operating systems should be pinned to specific versions instead of "-latest" for stability
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        default: |
          {
            "os": ["ubuntu-20.04", "macos-11", "windows-2022"],
            "python-version": ["3.7", "3.9"]
          }

defaults:
  run:
    shell: bash

jobs:

  init-store:  #  todo: remove this wne download will be fault tolerant
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: mkdir dist && touch dist/.placeholder
    - name: Upload 📤
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        path: dist


  pkg-build:
    needs: init-store
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1  # run sequential to prevent download/upload collisions
      fail-fast: false
      matrix: ${{ fromJSON(inputs.build-matrix) }}

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python 🐍
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Pull re-usable 🤖 actions️
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.actions-ref }}
        path: .cicd
        repository: Lightning-AI/utilities
    - name: Create package 📦
      uses: ./.cicd/.github/actions/pkg-create
      with:
        artifact-name: ${{ inputs.artifact-name }}


  pkg-check:
    needs: pkg-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.testing-matrix) }}

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python 🐍 ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pull re-usable 🤖 actions️
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.actions-ref }}
        path: .cicd
        repository: Lightning-AI/utilities
    - name: Installing package 📦
      uses: ./.cicd/.github/actions/pkg-install
      with:
        artifact-name: ${{ inputs.artifact-name }}
        import-name: ${{ inputs.import-name }}
        pip-flags: ${{ inputs.install-flags }}

    # TODO: add run doctests
