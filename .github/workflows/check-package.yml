name: Check package flow

on:
  workflow_call:
    inputs:
      import-name:
        description: 'Import name to test with after installation'
        required: true
        type: string
      pypi-name:
        description: 'PyPI name to install the package with'
        required: true
        type: string
      test-matrix:
        description: 'what test configs to run in json format'
        required: false
        type: string
        default: |
          {
            os: ["ubuntu-20.04", "macos-11", "windows-2022"],
            python_version: ["3.7", "3.9"]
          }

jobs:
  pkg-check:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.test-matrix) }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Check local package
        run: |
          pip install -q -U check-manifest
          # check MANIFEST.in
          check-manifest
          # check package
          python setup.py check --metadata --strict

      - name: Create package
        run: |
          pip install -q -U setuptools wheel
          python setup.py sdist bdist_wheel
          python setup.py clean

      - name: Check build package
        run: |
          pip install -q -U twine
          # check package description
          twine check dist/*

      - name: Install and uninstall package (archive)
        working-directory: dist
        run: |
          pip install *.tar.gz
          python -c "import ${{ inputs.import-name }}; print(${{ inputs.import-name }}.__version__)"
          pip uninstall -y ${{ inputs.pypi-name }}

      - name: Install and uninstall package (wheel)
        working-directory: dist
        run: |
          pip install *.whl
          python -c "import ${{ inputs.import-name }}; print(${{ inputs.import-name }}.__version__)"
          pip uninstall -y ${{ inputs.pypi-name }}
